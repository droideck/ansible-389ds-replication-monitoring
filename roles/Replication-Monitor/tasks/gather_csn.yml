- name: Find all log files in the replication monitoring directory
  ansible.builtin.find:
    paths: "{{ replication_monitoring_log_dir }}"
    patterns: "access*"
  register: log_files

- name: Copy dslogs script to the target machine
  ansible.builtin.copy:
    src: "{{ role_path }}/scripts/dslogs.py"
    dest: "/tmp/dslogs.py"
    mode: "0755"

- name: Execute dslogs script with output file option
  ansible.builtin.command:
    cmd: >
      python3 /tmp/dslogs.py
      {% for file in log_files.files %}
      {% if file.path.startswith(replication_monitoring_log_dir + 'access') %}
      {{ file.path }}
      {% endif %}
      {% endfor %}
      -o /tmp/{{ inventory_hostname }}_dslogs_output.json

- name: Copy dslogs output file to controller with server name in filename
  ansible.builtin.fetch:
    src: "/tmp/{{ inventory_hostname }}_dslogs_output.json"
    dest: "/tmp/{{ inventory_hostname }}_dslogs_output.json"
    flat: yes

- name: Run merge_dslogs script on the controller
  ansible.builtin.command:
    cmd: >
      python3 {{ role_path }}/scripts/merge_dslogs.py -o /tmp/merged_output.json
      {% for host in groups['all'] %}
      /tmp/{{ hostvars[host]['inventory_hostname'] }}_dslogs_output.json
      {% endfor %}
  delegate_to: localhost
  run_once: true
